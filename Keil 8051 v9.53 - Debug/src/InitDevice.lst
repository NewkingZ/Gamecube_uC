C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/16/2019 23:37:48 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\newan\S
                    -implicityStudio\v4_workspace\Gamecube_controller_start\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNING
                    -LEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\newan\SimplicityStudio\v4_workspac
                    -e\Gamecube_controller_start\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//kits/common/drivers/efm8_
                    -retargetserial;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/shared/si8051Base;C:/SiliconLabs/Si
                    -mplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8UB1/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELE
                    -NGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8UB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          
  17          // $[Library Includes]
  18          // [Library Includes]$
  19          
  20          //==============================================================================
  21          // enter_DefaultMode_from_RESET
  22          //==============================================================================
  23          extern void enter_DefaultMode_from_RESET(void) {
  24   1              // $[Config Calls]
  25   1              // Save the SFRPAGE
  26   1              uint8_t SFRPAGE_save = SFRPAGE;
  27   1              WDT_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PORTS_2_enter_DefaultMode_from_RESET();
  31   1              PBCFG_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  35   1              UART_0_enter_DefaultMode_from_RESET();
  36   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  37   1              // Restore the SFRPAGE
  38   1              SFRPAGE = SFRPAGE_save;
  39   1              // [Config Calls]$
  40   1      
  41   1      
  42   1      }
  43          
  44          
  45          //================================================================================
  46          // WDT_0_enter_DefaultMode_from_RESET
  47          //================================================================================
  48          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  49   1              // $[Watchdog Timer Init Variable Declarations]
  50   1              // [Watchdog Timer Init Variable Declarations]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/16/2019 23:37:48 PAGE 2   

  51   1              
  52   1              // $[WDTCN - Watchdog Timer Control]
  53   1              //Disable Watchdog with key sequence
  54   1              WDTCN = 0xDE; //First key
  55   1              WDTCN = 0xAD; //Second key
  56   1              // [WDTCN - Watchdog Timer Control]$
  57   1      
  58   1      
  59   1      }
  60          
  61          //================================================================================
  62          // PORTS_0_enter_DefaultMode_from_RESET
  63          //================================================================================
  64          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  65   1              // $[P0 - Port 0 Pin Latch]
  66   1              // [P0 - Port 0 Pin Latch]$
  67   1      
  68   1              // $[P0MDOUT - Port 0 Output Mode]
  69   1              /*
  70   1              // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
  71   1              //     drain.)
  72   1              // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
  73   1              //     drain.)
  74   1              // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
  75   1              //     drain.)
  76   1              // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
  77   1              //     drain.)
  78   1              // B4 (Port 0 Bit 4 Output Mode) = PUSH_PULL (P0.4 output is push-pull.)
  79   1              // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
  80   1              //     drain.)
  81   1              // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
  82   1              //     drain.)
  83   1              // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
  84   1              //     drain.)
  85   1              */
  86   1              SFRPAGE = 0x00;
  87   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN | P0MDOUT_B2__OPEN_DRAIN
  88   1                       | P0MDOUT_B3__OPEN_DRAIN | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  89   1                       | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
  90   1              // [P0MDOUT - Port 0 Output Mode]$
  91   1      
  92   1              // $[P0MDIN - Port 0 Input Mode]
  93   1              // [P0MDIN - Port 0 Input Mode]$
  94   1      
  95   1              // $[P0SKIP - Port 0 Skip]
  96   1              // [P0SKIP - Port 0 Skip]$
  97   1      
  98   1              // $[P0MASK - Port 0 Mask]
  99   1              // [P0MASK - Port 0 Mask]$
 100   1      
 101   1              // $[P0MAT - Port 0 Match]
 102   1              // [P0MAT - Port 0 Match]$
 103   1      
 104   1      
 105   1      }
 106          
 107          //================================================================================
 108          // PORTS_1_enter_DefaultMode_from_RESET
 109          //================================================================================
 110          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 111   1              // $[P1 - Port 1 Pin Latch]
 112   1              // [P1 - Port 1 Pin Latch]$
 113   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/16/2019 23:37:48 PAGE 3   

 114   1              // $[P1MDOUT - Port 1 Output Mode]
 115   1              // [P1MDOUT - Port 1 Output Mode]$
 116   1      
 117   1              // $[P1MDIN - Port 1 Input Mode]
 118   1              /*
 119   1              // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 120   1              //     digital mode.)
 121   1              // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 122   1              //     digital mode.)
 123   1              // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 124   1              //     digital mode.)
 125   1              // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
 126   1              //     digital mode.)
 127   1              // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 128   1              //     digital mode.)
 129   1              // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 130   1              //     digital mode.)
 131   1              // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
 132   1              //     digital mode.)
 133   1              // B7 (Port 1 Bit 7 Input Mode) = ANALOG (P1.7 pin is configured for
 134   1              //     analog mode.)
 135   1              */
 136   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 137   1                       | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 138   1                       | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 139   1              // [P1MDIN - Port 1 Input Mode]$
 140   1      
 141   1              // $[P1SKIP - Port 1 Skip]
 142   1              /*
 143   1              // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 144   1              //     crossbar.)
 145   1              // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 146   1              //     crossbar.)
 147   1              // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 148   1              //     crossbar.)
 149   1              // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 150   1              //     crossbar.)
 151   1              // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 152   1              //     crossbar.)
 153   1              // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 154   1              //     crossbar.)
 155   1              // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
 156   1              //     crossbar.)
 157   1              // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
 158   1              //     crossbar.)
 159   1              */
 160   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED | P1SKIP_B2__NOT_SKIPPED
 161   1                       | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 162   1                       | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__SKIPPED;
 163   1              // [P1SKIP - Port 1 Skip]$
 164   1      
 165   1              // $[P1MASK - Port 1 Mask]
 166   1              // [P1MASK - Port 1 Mask]$
 167   1      
 168   1              // $[P1MAT - Port 1 Match]
 169   1              // [P1MAT - Port 1 Match]$
 170   1      
 171   1      
 172   1      }
 173          
 174          //================================================================================
 175          // PORTS_2_enter_DefaultMode_from_RESET
 176          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/16/2019 23:37:48 PAGE 4   

 177          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 178   1              // $[P2 - Port 2 Pin Latch]
 179   1              // [P2 - Port 2 Pin Latch]$
 180   1      
 181   1              // $[P2MDOUT - Port 2 Output Mode]
 182   1              /*
 183   1              // B0 (Port 2 Bit 0 Output Mode) = PUSH_PULL (P2.0 output is push-pull.)
 184   1              // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 185   1              //     drain.)
 186   1              // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
 187   1              //     drain.)
 188   1              // B3 (Port 2 Bit 3 Output Mode) = PUSH_PULL (P2.3 output is push-pull.)
 189   1              */
 190   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN | P2MDOUT_B2__OPEN_DRAIN
 191   1                       | P2MDOUT_B3__PUSH_PULL;
 192   1              // [P2MDOUT - Port 2 Output Mode]$
 193   1      
 194   1              // $[P2MDIN - Port 2 Input Mode]
 195   1              // [P2MDIN - Port 2 Input Mode]$
 196   1      
 197   1              // $[P2SKIP - Port 2 Skip]
 198   1              /*
 199   1              // B0 (Port 2 Bit 0 Skip) = SKIPPED (P2.0 pin is skipped by the
 200   1              //     crossbar.)
 201   1              // B1 (Port 2 Bit 1 Skip) = NOT_SKIPPED (P2.1 pin is not skipped by the
 202   1              //     crossbar.)
 203   1              // B2 (Port 2 Bit 2 Skip) = NOT_SKIPPED (P2.2 pin is not skipped by the
 204   1              //     crossbar.)
 205   1              // B3 (Port 2 Bit 3 Skip) = SKIPPED (P2.3 pin is skipped by the
 206   1              //     crossbar.)
 207   1              */
 208   1              SFRPAGE = 0x20;
 209   1              P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__NOT_SKIPPED | P2SKIP_B2__NOT_SKIPPED
 210   1                       | P2SKIP_B3__SKIPPED;
 211   1              // [P2SKIP - Port 2 Skip]$
 212   1      
 213   1              // $[P2MASK - Port 2 Mask]
 214   1              // [P2MASK - Port 2 Mask]$
 215   1      
 216   1              // $[P2MAT - Port 2 Match]
 217   1              // [P2MAT - Port 2 Match]$
 218   1      
 219   1      
 220   1      }
 221          
 222          //================================================================================
 223          // PBCFG_0_enter_DefaultMode_from_RESET
 224          //================================================================================
 225          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 226   1              // $[XBR2 - Port I/O Crossbar 2]
 227   1              /*
 228   1              // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 229   1              //     Pullups enabled (except for Ports whose I/O are configured for analog
 230   1              //     mode).)
 231   1              // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 232   1              // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 233   1              //     pin.)
 234   1              // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 235   1              //     at Port pin.)
 236   1              // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 237   1              //     at Port pin.)
 238   1              */
 239   1              SFRPAGE = 0x00;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/16/2019 23:37:48 PAGE 5   

 240   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED | XBR2_URT1E__DISABLED
 241   1                       | XBR2_URT1RTSE__DISABLED | XBR2_URT1CTSE__DISABLED;
 242   1              // [XBR2 - Port I/O Crossbar 2]$
 243   1      
 244   1              // $[PRTDRV - Port Drive Strength]
 245   1              // [PRTDRV - Port Drive Strength]$
 246   1      
 247   1              // $[XBR0 - Port I/O Crossbar 0]
 248   1              /*
 249   1              // URT0E (UART0 I/O Enable) = ENABLED (UART0 TX0, RX0 routed to Port pins
 250   1              //     P0.4 and P0.5.)
 251   1              // SPI0E (SPI I/O Enable) = DISABLED (SPI I/O unavailable at Port pins.)
 252   1              // SMB0E (SMBus0 I/O Enable) = DISABLED (SMBus0 I/O unavailable at Port
 253   1              //     pins.)
 254   1              // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 255   1              //     pin.)
 256   1              // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 257   1              //     (Asynchronous CP0 unavailable at Port pin.)
 258   1              // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 259   1              //     pin.)
 260   1              // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 261   1              //     (Asynchronous CP1 unavailable at Port pin.)
 262   1              // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 263   1              //     pin.)
 264   1              */
 265   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 266   1                       | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 267   1                       | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 268   1              // [XBR0 - Port I/O Crossbar 0]$
 269   1      
 270   1              // $[XBR1 - Port I/O Crossbar 1]
 271   1              // [XBR1 - Port I/O Crossbar 1]$
 272   1      
 273   1      
 274   1      }
 275          
 276          //================================================================================
 277          // CLOCK_0_enter_DefaultMode_from_RESET
 278          //================================================================================
 279          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 280   1              // $[HFOSC1 Setup]
 281   1              // [HFOSC1 Setup]$
 282   1      
 283   1              // $[CLKSEL - Clock Select]
 284   1              /*
 285   1              // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 286   1              //     High Frequency Oscillator 0.)
 287   1              // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 288   1              //     selected clock source divided by 1.)
 289   1              // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 290   1              //     High Frequency Oscillator 0.)
 291   1              // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 292   1              //     selected clock source divided by 1.)
 293   1              */
 294   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 295   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 296   1              while(CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY);
 297   1              // [CLKSEL - Clock Select]$
 298   1      
 299   1      
 300   1      }
 301          
 302          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/16/2019 23:37:48 PAGE 6   

 303          // TIMER01_0_enter_DefaultMode_from_RESET
 304          //================================================================================
 305          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 306   1              // $[Timer Initialization]
 307   1              //Save Timer Configuration
 308   1              uint8_t TCON_save = TCON;
 309   1              //Stop Timers
 310   1              TCON &= TCON_TR0__BMASK & TCON_TR1__BMASK;
 311   1      
 312   1              // [Timer Initialization]$
 313   1      
 314   1              // $[TH0 - Timer 0 High Byte]
 315   1              // [TH0 - Timer 0 High Byte]$
 316   1      
 317   1              // $[TL0 - Timer 0 Low Byte]
 318   1              // [TL0 - Timer 0 Low Byte]$
 319   1      
 320   1              // $[TH1 - Timer 1 High Byte]
 321   1              /*
 322   1              // TH1 (Timer 1 High Byte) = 0x96
 323   1              */
 324   1              TH1 = (0x96 << TH1_TH1__SHIFT);
 325   1              // [TH1 - Timer 1 High Byte]$
 326   1      
 327   1              // $[TL1 - Timer 1 Low Byte]
 328   1              // [TL1 - Timer 1 Low Byte]$
 329   1      
 330   1              // $[Timer Restoration]
 331   1              //Restore Timer Configuration
 332   1              TCON = TCON_save;
 333   1      
 334   1              // [Timer Restoration]$
 335   1      
 336   1      
 337   1      }
 338          
 339          //================================================================================
 340          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 341          //================================================================================
 342          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 343   1              // $[CKCON0 - Clock Control 0]
 344   1              /*
 345   1              // SCA (Timer 0/1 Prescale) = SYSCLK_DIV_12 (System clock divided by 12.)
 346   1              // T0M (Timer 0 Clock Select) = PRESCALE (Counter/Timer 0 uses the clock
 347   1              //     defined by the prescale field, SCA.)
 348   1              // T2MH (Timer 2 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 high
 349   1              //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 350   1              // T2ML (Timer 2 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 low
 351   1              //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 352   1              // T3MH (Timer 3 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 high
 353   1              //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 354   1              // T3ML (Timer 3 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 low
 355   1              //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 356   1              // T1M (Timer 1 Clock Select) = SYSCLK (Timer 1 uses the system clock.)
 357   1              */
 358   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE | CKCON0_T2MH__EXTERNAL_CLOCK
 359   1                       | CKCON0_T2ML__EXTERNAL_CLOCK | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 360   1                       | CKCON0_T1M__SYSCLK;
 361   1              // [CKCON0 - Clock Control 0]$
 362   1      
 363   1              // $[CKCON1 - Clock Control 1]
 364   1              // [CKCON1 - Clock Control 1]$
 365   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/16/2019 23:37:48 PAGE 7   

 366   1              // $[TMOD - Timer 0/1 Mode]
 367   1              /*
 368   1              // T0M (Timer 0 Mode Select) = MODE0 (Mode 0, 13-bit Counter/Timer)
 369   1              // T1M (Timer 1 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 370   1              //     Auto-Reload)
 371   1              // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 372   1              //     on the clock defined by T0M in the CKCON0 register.)
 373   1              // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 374   1              //     irrespective of INT0 logic level.)
 375   1              // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
 376   1              //     on the clock defined by T1M in the CKCON0 register.)
 377   1              // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 378   1              //     irrespective of INT1 logic level.)
 379   1              */
 380   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER | TMOD_GATE0__DISABLED
 381   1                       | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 382   1              // [TMOD - Timer 0/1 Mode]$
 383   1      
 384   1              // $[TCON - Timer 0/1 Control]
 385   1              /*
 386   1              // TR1 (Timer 1 Run Control) = RUN (Start Timer 1 running.)
 387   1              */
 388   1              TCON |= TCON_TR1__RUN;
 389   1              // [TCON - Timer 0/1 Control]$
 390   1      
 391   1      
 392   1      }
 393          
 394          //================================================================================
 395          // UART_0_enter_DefaultMode_from_RESET
 396          //================================================================================
 397          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 398   1              // $[UART0FCN0 - UART0 FIFO Control 0]
 399   1              // [UART0FCN0 - UART0 FIFO Control 0]$
 400   1      
 401   1              // $[UART0FCN1 - UART0 FIFO Control 1]
 402   1              // [UART0FCN1 - UART0 FIFO Control 1]$
 403   1      
 404   1              // $[SCON0 - UART0 Serial Port Control]
 405   1              /*
 406   1              // REN (Receive Enable) = RECEIVE_ENABLED (UART0 reception enabled.)
 407   1              */
 408   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 409   1              // [SCON0 - UART0 Serial Port Control]$
 410   1      
 411   1      
 412   1      }
 413          
 414          //================================================================================
 415          // INTERRUPT_0_enter_DefaultMode_from_RESET
 416          //================================================================================
 417          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 418   1              // $[EIE1 - Extended Interrupt Enable 1]
 419   1              // [EIE1 - Extended Interrupt Enable 1]$
 420   1      
 421   1              // $[EIE2 - Extended Interrupt Enable 2]
 422   1              // [EIE2 - Extended Interrupt Enable 2]$
 423   1      
 424   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 425   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 426   1      
 427   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 428   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/16/2019 23:37:48 PAGE 8   

 429   1      
 430   1              // $[EIP2 - Extended Interrupt Priority 2]
 431   1              // [EIP2 - Extended Interrupt Priority 2]$
 432   1      
 433   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 434   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 435   1      
 436   1              // $[IE - Interrupt Enable]
 437   1              /*
 438   1              // EA (All Interrupts Enable) = DISABLED (Disable all interrupt sources.)
 439   1              // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 440   1              //     interrupt 0.)
 441   1              // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 442   1              //     interrupt 1.)
 443   1              // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
 444   1              //     interrupts.)
 445   1              // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 446   1              //     interrupt.)
 447   1              // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 448   1              //     interrupt.)
 449   1              // ET2 (Timer 2 Interrupt Enable) = DISABLED (Disable Timer 2 interrupt.)
 450   1              // ES0 (UART0 Interrupt Enable) = ENABLED (Enable UART0 interrupt.)
 451   1              */
 452   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 453   1                       | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__DISABLED | IE_ES0__ENABLED;
 454   1              // [IE - Interrupt Enable]$
 455   1      
 456   1              // $[IP - Interrupt Priority]
 457   1              // [IP - Interrupt Priority]$
 458   1      
 459   1              // $[IPH - Interrupt Priority High]
 460   1              // [IPH - Interrupt Priority High]$
 461   1      
 462   1      
 463   1      }
 464          
 465          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    113    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
