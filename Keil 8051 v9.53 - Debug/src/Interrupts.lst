C51 COMPILER V9.53.0.0   INTERRUPTS                                                        09/16/2019 23:37:48 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INTERRUPTS
OBJECT MODULE PLACED IN .\src\Interrupts.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\newan\S
                    -implicityStudio\v4_workspace\Gamecube_controller_start\src\Interrupts.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNING
                    -LEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\newan\SimplicityStudio\v4_workspac
                    -e\Gamecube_controller_start\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//kits/common/drivers/efm8_
                    -retargetserial;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/shared/si8051Base;C:/SiliconLabs/Si
                    -mplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8UB1/inc) PRINT(.\src\Interrupts.lst) COND PAGEWIDTH(120) PAGELE
                    -NGTH(65) OBJECT(.\src\Interrupts.OBJ)

line level    source

   1          //=========================================================
   2          // src/Interrupts.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9                   
  10          // USER INCLUDES                        
  11          #include <SI_EFM8UB1_Register_Enums.h>
  12          
  13          //-----------------------------------------------------------------------------
  14          // Global CONSTANTS
  15          //-----------------------------------------------------------------------------
  16          #define UART_BUFFERSIZE        64
  17          
  18          //-----------------------------------------------------------------------------
  19          // Global Variables
  20          //-----------------------------------------------------------------------------
  21          uint8_t UART_Buffer[UART_BUFFERSIZE];
  22          uint8_t UART_Buffer_Size = 0;
  23          uint8_t UART_Input_First = 0;
  24          uint8_t UART_Output_First = 0;
  25          uint8_t TX_Ready =1;
  26          uint8_t Byte = 0;
  27          
  28          //-----------------------------------------------------------------------------
  29          // UART0_ISR
  30          //-----------------------------------------------------------------------------
  31          //
  32          // UART0 ISR Content goes here. Remember to clear flag bits:
  33          // SCON0::RI (Receive Interrupt Flag)
  34          // SCON0::TI (Transmit Interrupt Flag)
  35          //
  36          // This routine is invoked whenever a character is entered or displayed on the
  37          // Hyperterminal.
  38          //
  39          //-----------------------------------------------------------------------------
  40          SI_INTERRUPT(UART0_ISR, UART0_IRQn)
  41          {
  42   1                 if (SCON0_RI == 1)
  43   1                 {
  44   2                    if( UART_Buffer_Size == 0)  {    // If new word is entered
  45   3                       UART_Input_First = 0;    }
  46   2      
  47   2                    SCON0_RI = 0;                          // Clear interrupt flag
  48   2      
  49   2                    Byte = SBUF0;                    // Read a character from UART
  50   2      
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        09/16/2019 23:37:48 PAGE 2   

  51   2                    if (UART_Buffer_Size < UART_BUFFERSIZE)
  52   2                    {
  53   3                       UART_Buffer[UART_Input_First] = Byte; // Store in array
  54   3      
  55   3                       UART_Buffer_Size++;           // Update array's size
  56   3      
  57   3                       UART_Input_First++;           // Update counter
  58   3                    }
  59   2                 }
  60   1      
  61   1                 if (SCON0_TI == 1)                        // Check if transmit flag is set
  62   1                 {
  63   2                    SCON0_TI = 0;                          // Clear interrupt flag
  64   2      
  65   2                    if (UART_Buffer_Size != 1)       // If buffer not empty
  66   2                    {
  67   3                       // If a new word is being output
  68   3                       if ( UART_Buffer_Size == UART_Input_First ) {
  69   4                            UART_Output_First = 0;  }
  70   3      
  71   3                       // Store a character in the variable byte
  72   3                       Byte = UART_Buffer[UART_Output_First];
  73   3      
  74   3                       if ((Byte >= 0x61) && (Byte <= 0x7A)) { // If upper case letter
  75   4                          Byte -= 32; }
  76   3      
  77   3                       SBUF0 = Byte;                 // Transmit to Hyperterminal
  78   3      
  79   3                       UART_Output_First++;          // Update counter
  80   3      
  81   3                       UART_Buffer_Size--;           // Decrease array size
  82   3      
  83   3                    }
  84   2                    else
  85   2                    {
  86   3                       UART_Buffer_Size = 0;         // Set the array size to 0
  87   3                       TX_Ready = 1;                 // Indicate transmission complete
  88   3                    }
  89   2                 }
  90   1      }
  91          
  92          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    111    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     69    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
